{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richk\\\\OneDrive\\\\Desktop\\\\SideProjects\\\\meetingmaker\\\\code\\\\client\\\\src\\\\user\\\\groups\\\\pendingGroups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PendingGroups = () => {\n  _s();\n\n  const [pendingGroups, setPendingGroups] = useState([]);\n\n  const getPendingGroups = () => {\n    var config = {\n      method: \"get\",\n      url: \"http://localhost:5000/api/users/getPendingGroups\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      params: {\n        meetingId: meetings\n      }\n    };\n    axios(config).then(res => {\n      setMeetingInfos(res.data.meetingInfos);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Get Pending\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PendingGroups, \"EFJA6Pd6ssGrUH7B19cCMzbWIdI=\");\n\n_c = PendingGroups;\nexport default PendingGroups;\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingGroups\");","map":{"version":3,"names":["React","useState","PendingGroups","pendingGroups","setPendingGroups","getPendingGroups","config","method","url","headers","params","meetingId","meetings","axios","then","res","setMeetingInfos","data","meetingInfos","catch","err","console","log"],"sources":["C:/Users/richk/OneDrive/Desktop/SideProjects/meetingmaker/code/client/src/user/groups/pendingGroups.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PendingGroups=()=>{\r\n    const [pendingGroups,setPendingGroups] = useState([])\r\n\r\n    const getPendingGroups=()=>{\r\n        var config = {\r\n            method:\"get\",\r\n            url:\"http://localhost:5000/api/users/getPendingGroups\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            params:{\r\n                meetingId:meetings\r\n            }\r\n        }\r\n        axios(config)\r\n        .then(res=>{\r\n            setMeetingInfos(res.data.meetingInfos)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            Get Pending\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PendingGroups"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,aAAa,GAAC,MAAI;EAAA;;EACpB,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCH,QAAQ,CAAC,EAAD,CAAjD;;EAEA,MAAMI,gBAAgB,GAAC,MAAI;IACvB,IAAIC,MAAM,GAAG;MACTC,MAAM,EAAC,KADE;MAETC,GAAG,EAAC,kDAFK;MAGTC,OAAO,EAAC;QACJ,gBAAe;MADX,CAHC;MAMTC,MAAM,EAAC;QACHC,SAAS,EAACC;MADP;IANE,CAAb;IAUAC,KAAK,CAACP,MAAD,CAAL,CACCQ,IADD,CACMC,GAAG,IAAE;MACPC,eAAe,CAACD,GAAG,CAACE,IAAJ,CAASC,YAAV,CAAf;IACH,CAHD,EAICC,KAJD,CAIOC,GAAG,IAAE;MACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACH,CAND;EAOH,CAlBD;;EAmBA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA3BD;;GAAMlB,a;;KAAAA,a;AA6BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}